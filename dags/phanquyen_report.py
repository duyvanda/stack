# -*- coding: utf-8 -*-
"""f_sales_pend.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Gv4TJMgxnLP4CFit3NFDFF8kjnBH9Ci6
"""

# # DON'T USE THIS CELL
from utils.df_handle import *
import pendulum
from airflow import DAG
from airflow.operators.dummy_operator import DummyOperator
from airflow.operators.python_operator import PythonOperator

local_tz = pendulum.timezone("Asia/Bangkok")
name='report'
prefix='PhanQuyen_'
path = f'/usr/local/airflow/plugins/'#--{prefix}{name}/'

# datenow_min1 = (datetime.now() - timedelta(days=1)).strftime("%Y-%m-%d")

dag_params = {
    'owner': 'phuonght2',
    "depends_on_past": False,
    'start_date': datetime(2022, 4, 28, tzinfo=local_tz),
    # 'email_on_failure': True,
    # 'email_on_retry': False,
    # 'email':['duyvq@merapgroup.com', 'vanquangduy10@gmail.com'],
    'do_xcom_push': False,
    'execution_timeout':timedelta(seconds=300)
    # 'retries': 3,
    # 'retry_delay': timedelta(minutes=10),
}

dag = DAG(prefix+name,
          catchup=False,
          default_args=dag_params,
          schedule_interval= '0 8-17 * * *',
          tags=[prefix+name, 'Daily', '60mins']
)

# fdom = datetime.now().replace(day=1).strftime("%Y%m%d")
# datenow = datetime.now().strftime("%Y%m%d")
# datenow_add1 = (datetime.now() + timedelta(1)).strftime("%Y%m%d")



def update_phanquyen_report():
    #lấy data danh sách report
    df = pd.read_csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vSuXl7AnpSA5j_KrgFO2zhLn8DsD20RVuuG7g6Y7F9y5EbiPHT05ug_m3eh8MBOaMDvNmk-DX4g0igF/pub?gid=604781671&single=true&output=csv")
    cleancols(df)
    df.columns =lower_col(df)
    df_aut = pd.melt(df,id_vars=['tenreport', 'linkreport', 'type','id', 'width'])
    df_aut=df_aut[~df_aut['value'].isna()]
    df_aut.rename(columns={'value':'accessgroup'},inplace=True)

    #lấy data phân quyền detail tách theo phân quyền CA & non CA
    df_group = pd.read_csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vSuXl7AnpSA5j_KrgFO2zhLn8DsD20RVuuG7g6Y7F9y5EbiPHT05ug_m3eh8MBOaMDvNmk-DX4g0igF/pub?gid=2075224509&single=true&output=csv")
    cleancols(df_group)
    df_group.columns=lower_col(df_group)    
    dk2= df_group['csv_link']!='CA'
    df_link = df_group[~df_group['csv_link'].isna()]
    link=df_link['csv_link'][df_link['accessgroupcongtyphongbanlevel']!='CA']
    ca_link=df_link['csv_link'][df_link['accessgroupcongtyphongbanlevel']=='CA']

    # #Join phân quyền theo Access Group
    df0 = pd.DataFrame()
    for i in link:
        df = pd.read_csv(i)
        df0 = pd.concat([df0,df])
    dropdup(df0,3)
    df0['accessgroup'] = df0['congty']+'-'+df0['phongban']+'-'+df0['chucdanh']
    full_df = pd.merge(df_aut,df0,how='inner', on='accessgroup')

    # #Join phân quyền theo chuc danh đối với cấp CA
    df1 = pd.DataFrame()
    for i in ca_link:
        df = pd.read_csv(i)
        df1 = pd.concat([df1,df])
    full_df_ca = pd.merge(df_aut,df1,how='inner',left_on='accessgroup', right_on='chucdanh')

    #nối data & inset to BQ
    full_df = pd.concat([full_df,full_df_ca])
    df_mail = full_df[['email','tencvbh']]
    df_mail['email1'] = df_mail['email'].str.lower()
    df_mail = dropdup(df_mail,3,subset='email1')
    df_mail['tencvbh1'] =df_mail['tencvbh']
    df_mail=df_mail[['email','tencvbh1','email1']]
    full_df = pd.merge(full_df,df_mail,how='left',on='email')
    full_df.drop(['email','tencvbh'], axis=1,inplace=True)
    full_df.rename(columns={'email1':'email',
                                'tencvbh1':'tencvbh'
                                }, inplace=True)


    full_df['inserted_at']=datetime.now()
    bq_values_insert(full_df, "d_phanquyen_tonghop",3)






# Dont Execute this
dummy_start = DummyOperator(task_id="dummy_start", dag=dag)

update_phanquyen_report = PythonOperator(task_id="update_phanquyen_report", python_callable=update_phanquyen_report, dag=dag)

dummy_start >> update_phanquyen_report